@charset "utf-8";

/*有序和无序字符串*/

@mixin firefox-message($selector) {
    body.firefox #{$selector}:before {
        content: "Hi, Firefox users!";
    }
}

@include firefox-message(".header");

/*普通变量与默认变量*/

$fontSize: 14px;
$fontSize:12px !default;
body {
    font-size: $fontSize;
}


/*局部变量和全局变量*/

$color: orange !default; //定义全局变量(在选择器、函数、混合宏...的外面定义的变量为全局变量)
.block {
    color: $color; //调用全局变量
}

em {
    $color: red; //定义局部变量
    a {
        color: $color; //调用局部变量
    }
}

span {
    color: $color; //调用全局变量
}


/* 计算功能 +*/

.box {
    width: 20px + 8in;
}


/* + - 单位不同报错*/

.box {
    width: 20px + 1;
    // width: 20px + 1em;
}

$full-width: 960px;
.content {
    width: $full-width - 1;
    // width: $full-width - 1em;
}

.box {
    width: 10px * 2;
    // width: 10px * 2em;
}

.box1 {
    width: (5000px/2);
    // width: (5000px/2em);
}

p {
    font: 10px/8px; // 纯 CSS，不是除法运算
    height: (16px/8px);
    $width: 1000px;
    width: $width/2; // 使用了变量，是除法运算
    width: round(1.5) / 2; // 使用了函数，是除法运算
    height: (500px/2); // 使用了圆括号，是除法运算
    margin-left: 5px + 8px/2px; // 使用了加（+）号，是除法运算
}

p {
    // color: #010203 + #040506; // 01+04 02+05 )3+06
}

$content: 'Hello'+''+'Sass!';
.box:before {
    content: ' #{$content} ';
}

div {
    cursor: 'e' + -resize;
    position: re + 'lative'
}


/* 选择器嵌套*/

nav {
    a {
        color: red;
        &:hover {
            color: green;
        }
        head & {
            color: green;
        }
    }
}


/* 属性嵌套*/

.box {
    font: {
        size: 12px;
        weight: bold;
    }
}


/* 伪类嵌套*/

.box {
    &:before {
        content: '伪元素嵌套';
    }
}


/*混合宏传多个参数*/

@mixin center($width, $height) {
    width: $width;
    height: $height;
    position: absolute;
    top: 50%;
    left: 50%;
    margin-top: -($height) / 2;
    margin-left: -($width) / 2;
}

.box-center {
    @include center(500px, 300px);
}


/*混合宏传多个参数 ...*/

@mixin box-shadow($shadows...) {
    @if length($shadows)>=1 {
        -webkit-box-shadow: $shadows;
        box-shadow: $shadows;
    }
    @else {
        $shadows: 0 0 2px rgba(#000, 0.25);
        -webkit-box-shadow: $shadows;
        box-shadow: $shadows;
    }
}

.box {
    @include box-shadow(0 0 1px rgba(#000, 0.5), 0 0 2px rgba(#000, 0.2));
}

.box1 {
    @include box-shadow();
}


/*混合宏的不足*/

@mixin border-radius {
    -webkit-border-radius: 3px;
    border-radius: 3px;
}

.box {
    @include border-radius;
    margin-bottom: 5px;
}

.btn {
    @include border-radius;
}


/*继承*/

.btn {
    border: 1px solid #ccc;
    padding: 6px 10px;
    font-size: 14px;
}

.btn-primary {
    background-color: #f36;
    color: #fff;
    @extend .btn;
}

.btn-default {
    background-color: orange;
    color: #fff;
    @extend .btn;
}


/*占位符*/

%mt5 {
    margin-top: 5px;
}

%pt5 {
    padding-top: 5px;
}

.btn {
    // 没有被@extent调用就不会被编译到css中
    @extend %mt5;
    @extend %pt5;
}


/*函数*/

.test {
    text: to-upper-case(aaaaa);
    text: to-lower-case(aA-aAAA-aaa);
}

.footer {
    width: round(12.3px)
}

.footer1 {
    width: index(1px solid red, red)
}

$social-colors: ( dribble: #ea4c89, facebook: #3b5998, github: #171515, google: #db4437, twitter: #55acee);
.btn-dribble {
    color: map-get($social-colors, facebook);
}


/*for循环*/

@for $i from 1 to 3 {
    .border-#{$i} {
        border: #{$i}px solid blue;
    }
}

@for $i from 1 through 3 {
    .border-#{$i} {
        border: #{$i}px solid blue;
    }
}

$grid-prefix: span !default;
$grid-width: 60px !default;
$grid-gutter: 20px !default;
%grid {
    float: left;
    margin-left: $grid-gutter / 2;
    margin-right: $grid-gutter / 2;
}

@for $i from 1 through 12 {
    .#{$grid-prefix}#{$i} {
        width: $grid-width * $i + $grid-gutter * ($i - 1);
        @extend %grid;
    }
}

$i: 6;
@while $i>0 {
    .item-#{$i} {
        width: 2em * $i;
    }
    $i: $i - 2;
}


/*each循环*/

$list: adam john wynn mason kuroir; //$list 就是一个列表
@mixin author-images {
    @each $author in $list {
        .photo-#{$author} {
            background: url("/images/avatars/#{$author}.png") no-repeat;
        }
    }
}

.author-bio {
    @include author-images;
}


/*@规则*/

.sidebar {
    width: 300px;
    @media screen and (orientation: landscape) {
        width: 500px;
    }
}

@mixin error($x) {
    @if $x < 10 {
        width: $x * 10px;
    }
    @else if $x==10 {
        width: $x;
    }
    @else {
        @warn "你需要将#{$x}值设置在10以内的数";
    }
}

.test {
    @include error(9);
}

@mixin error($x) {
    @debug 666px;
    @if $x < 10 {
        width: $x * 10px;
    }
    @else if $x==10 {
        width: $x;
    }
    @else {
        @debug 666px;
        @error "你需要将#{$x}值设置在10以内的数";
    }
}

.test {
    @include error(9);
}